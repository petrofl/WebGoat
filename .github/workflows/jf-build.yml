name: "Webgoat Build with Artifactory"
on:
    pull_request:
        paths-ignore:
            - '.txt'
            - 'LICENSE'
            - 'docs/**'
        branches: [main]
    push:
        branches:
            - main

jobs:
    build:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ ubuntu-latest ]
        env:
            JFROG_CLI_BUILD_NAME: 'WebGoat from GitHub workflow'
            JFROG_CLI_BUILD_NUMBER: ${{ github.run_number }}
            JFROG_BUILD_PROJECT: "ptfl1"
            JFROG_CLI_LOG_LEVEL: DEBUG 
            MAVEN_REPO: ptfl1-maven-virtual
        steps:
            -   uses: actions/checkout@v3
            -   name: Set up JDK 17
                uses: actions/setup-java@v4
                with:
                    distribution: 'temurin'
                    java-version: 17
                    architecture: x64
            -   name: Setup Jfrog CLI 
                uses: jfrog/setup-jfrog-cli@v4
                env:
                       # JFrog platform url (for example: https://acme.jfrog.io)
                       JF_URL: ${{ secrets.JF_URL }}
                       JF_USERNAME: ${{secrets.JF_USERNAME}}
                       # JFrog platform access token (if JF_USER and JF_PASSWORD are not provided)
                       JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}
            -   name: Artifactory check connection
                run: jf rt ping 
            -   name: Build Maven package
                run: |
                  jf mvn-config --repo-resolve-releases ${{ env.MAVEN_REPO }} --repo-resolve-snapshots ${{ env.MAVEN_REPO }} --repo-deploy-releases ptfl1-maven-local-release --repo-deploy-snapshots ptfl1-maven-local-release
                  jf mvn clean install --project ${{ env.JFROG_BUILD_PROJECT }}
            -   name: Deploy Maven Package
                run: |
                  jf mvn deploy --project ${{ env.JFROG_BUILD_PROJECT }} -Dversion=1.0
            -   name: Build Docker image
                if: github.ref == 'refs/heads/main'
                run: |
                    jf docker build -f Dockerfile -t soleng.jfrog.io/ptfl1-docker/pwebgoat:${{ env.JFROG_CLI_BUILD_NUMBER }} .
                    jf docker push soleng.jfrog.io/ptfl1-docker/pwebgoat:${{ env.JFROG_CLI_BUILD_NUMBER }} --project ${{ env.JFROG_BUILD_PROJECT }}
            -   name: Build the package and the info
                run: |
                    jf rt bce 
                    jf rt bag
                    jf rt bp